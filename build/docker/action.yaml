name: Docker Build
author: Eviive
description: Builds a Docker image

inputs:
  docker-hub-username:
    description: Docker Hub username
    required: true
  docker-hub-token:
    description: Docker Hub token
    required: true
  docker-hub-repository:
    description: Docker Hub repository where the image will be pushed
    required: true
  dockerfile:
    description: Path to the Dockerfile
    default: Dockerfile
  docker-tag-prefix:
    description: Prefix to add to the Docker tag
  docker-build-args-version:
    description: Whether to add the version as a build argument
    default: 'false'
  lfs:
    description: Whether to use Git LFS
    default: 'false'

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: ${{ inputs.lfs == 'true' || inputs.lfs == true }}

    - id: docker-metadata
      name: Docker metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.docker-hub-username }}/${{ inputs.docker-hub-repository }}
        flavor: |
          latest=false
          prefix=${{ inputs.docker-tag-prefix }}

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.docker-hub-username }}
        password: ${{ inputs.docker-hub-token }}

    - id: build-build-args
      name: Build build args
      shell: bash
      env:
        INCLUDE_VERSION: ${{ inputs.docker-build-args-version == 'true' || inputs.docker-build-args-version == true }}
        PREFIXED_VERSION: ${{ steps.docker-metadata.outputs.version }}
        PREFIX: ${{ inputs.docker-tag-prefix }}
      run: |
        echo "args<<EOF" >> $GITHUB_OUTPUT
        if [[ "$INCLUDE_VERSION" == "true" ]]; then
          echo "version=${PREFIXED_VERSION#"$PREFIX"}" >> $GITHUB_OUTPUT
        fi
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Push to Docker Hub
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        build-args: ${{ steps.build-build-args.outputs.args }}
        tags: ${{ steps.docker-metadata.outputs.tags }}
        labels: ${{ steps.docker-metadata.outputs.labels }}
        push: true
